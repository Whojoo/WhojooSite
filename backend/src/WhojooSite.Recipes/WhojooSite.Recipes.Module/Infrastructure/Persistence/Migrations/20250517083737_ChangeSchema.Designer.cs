// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WhojooSite.Recipes.Module.Infrastructure.Persistence;

#nullable disable

namespace WhojooSite.Recipes.Module.Persistence.Migrations
{
    [DbContext(typeof(RecipesDbContext))]
    [Migration("20250517083737_ChangeSchema")]
    partial class ChangeSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("recipes")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WhojooSite.Recipes.Module.Domain.Cookbook.Cookbook", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("_recipeIds")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cookbooks", "recipes");
                });

            modelBuilder.Entity("WhojooSite.Recipes.Module.Domain.Recipes.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("CookbookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Recipes", "recipes");
                });

            modelBuilder.Entity("WhojooSite.Recipes.Module.Domain.SpiceMix.SpiceMix", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("SpiceMixes", "recipes");
                });

            modelBuilder.Entity("WhojooSite.Recipes.Module.Domain.Recipes.Recipe", b =>
                {
                    b.OwnsMany("WhojooSite.Recipes.Module.Domain.Common.ValueObjects.Ingredient", "_ingredients", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<double>("Amount")
                                .HasPrecision(6, 2)
                                .HasColumnType("double precision");

                            b1.Property<string>("MeasurementUnit")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("RecipeIngredients", "recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("WhojooSite.Recipes.Module.Domain.Common.ValueObjects.Ingredient", "_spices", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<double>("Amount")
                                .HasPrecision(6, 2)
                                .HasColumnType("double precision");

                            b1.Property<string>("MeasurementUnit")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("RecipeSpices", "recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("WhojooSite.Recipes.Module.Domain.Recipes.SpiceMixIngredient", "_spiceMixIngredients", b1 =>
                        {
                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<double>("Amount")
                                .HasPrecision(6, 2)
                                .HasColumnType("double precision");

                            b1.Property<string>("MeasurementUnit")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<long>("SpiceMixId")
                                .HasColumnType("bigint");

                            b1.HasKey("RecipeId", "Id");

                            b1.ToTable("RecipeSpiceMixIngredients", "recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("WhojooSite.Recipes.Module.Domain.Recipes.Step", "_steps", b1 =>
                        {
                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.Property<long>("RecipeId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Summary")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)");

                            b1.HasKey("Id");

                            b1.HasIndex("RecipeId");

                            b1.ToTable("Steps", "recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.Navigation("_ingredients");

                    b.Navigation("_spiceMixIngredients");

                    b.Navigation("_spices");

                    b.Navigation("_steps");
                });

            modelBuilder.Entity("WhojooSite.Recipes.Module.Domain.SpiceMix.SpiceMix", b =>
                {
                    b.OwnsMany("WhojooSite.Recipes.Module.Domain.Common.ValueObjects.Ingredient", "_spices", b1 =>
                        {
                            b1.Property<long>("SpiceMixId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<double>("Amount")
                                .HasPrecision(6, 2)
                                .HasColumnType("double precision");

                            b1.Property<string>("MeasurementUnit")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.HasKey("SpiceMixId", "Id");

                            b1.ToTable("SpiceMixIngredients", "recipes");

                            b1.WithOwner()
                                .HasForeignKey("SpiceMixId");
                        });

                    b.Navigation("_spices");
                });
#pragma warning restore 612, 618
        }
    }
}
